[profile.release]
# Debug disabled to increase CI speed and reduce image size. If we need to do profiling
# we can temporarily enable this.
debug           = false
lto             = "thin"
split-debuginfo = "off"

[profile.ci-test]
debug    = false
inherits = "test"

[target.x86_64-unknown-linux-gnu]
rustflags = ["-C", "link-arg=-fuse-ld=lld"]

[target.aarch64-unknown-linux-gnu]
rustflags = ["-C", "link-arg=-fuse-ld=lld"]

#####################################
# Warnings and Linter Configuration #
#####################################
# This is a hack to work around the fact that neither rustc, cargo, nor clippy
# allows globally configuring lints. To avoid having to copy a massive block of
# allow/warn/deny statements to the top of every file, we configure them as
# all-profile compiler flags here.
[target.'cfg(all())']
rustflags = [
    "-Dwarnings",
    "-Dfuture-incompatible",
    "-Dnonstandard-style",
    "-Drust-2018-compatibility",
    "-Drust-2018-idioms",
    "-Drust-2021-compatibility",
    "-Dunused",
    "-Dclippy::all",
    "-Dclippy::correctness",
    "-Dclippy::suspicious",
    "-Dclippy::style",
    "-Dclippy::complexity",
    "-Dclippy::perf",
    "-Dclippy::pedantic",
    "-Dclippy::nursery",

    "-Aclippy::missing-errors-doc",
    "-Aclippy::missing-panics-doc",
    "-Aclippy::module-name-repetitions",
    "-Aclippy::similar-names",
    "-Aclippy::too-long-first-doc-paragraph",
    "-Aclippy::too-many-arguments",
    "-Aclippy::too-many-lines",

    # Spurious as of 1.86
    "-Aclippy::future-not-send",
    "-Aclippy::missing_const_for_fn",
    "-Aclippy::significant_drop_tightening",
    "-Aclippy::significant_drop_in_scrutinee",

    # This is triggering in built.rs and disabling it in the owning mod is not working.
    "-Aclippy::needless_raw_string_hashes",
]

# Fetch internal repos via git
[net]
git-fetch-with-cli = true

# Make sure we don't compile protoc
[env]
PROTOC_NO_VENDOR = "true"
