// pulse - bitdrift's observability proxy
// Copyright Bitdrift, Inc. All rights reserved.
//
// Use of this source code is governed by a source available license that can be found in the
// LICENSE file or at:
// https://polyformproject.org/wp-content/uploads/2020/06/PolyForm-Shield-1.0.0.txt

syntax = "proto3";
package pulse.config.outflow.v1;

import "pulse/config/common/v1/common.proto";
import "pulse/config/common/v1/retry.proto";
import "pulse/config/outflow/v1/queue_policy.proto";
import "pulse/config/outflow/v1/outflow_common.proto";
import "google/protobuf/duration.proto";
import "validate/validate.proto";

// Configuration for a Prometheus remote write outflow/client.
message PromRemoteWriteClientConfig {
  // Configuration specific to the Lyft's use of M3. This can be generalized later if needed. Will
  // end up setting `M3-Metrics-Type: aggregated` and `M3-Storage-Policy` to the value of each
  // policy below.
  message LyftSpecificConfig {
    // Catch-all storage policy.
    string general_storage_policy = 1 [(validate.rules).string = {min_len: 1}];
    // Metrics that have a "host" tag.
    optional string instance_metrics_storage_policy = 2;
    // Metrics that do not have a "statsd" "source" tag, and are of the form <namespace>:infra:aws.
    optional string cloudwatch_metrics_storage_policy = 3;
  }

  // The URI to send to.
  string send_to = 1 [(validate.rules).string = {min_len: 1}];

  // The request timeout. Defaults to 10s.
  google.protobuf.Duration request_timeout = 2 [(validate.rules).duration.gt = {}];

  // The maximum number of inflight requests. Defaults to 16.
  optional uint64 max_in_flight = 3;

  // Queue policy for the client.
  QueuePolicy queue_policy = 4;

  // The maximum number of samples per batch. Defaults to 1000.
  optional uint64 batch_max_samples = 5;

  // The maximum size of each batch in bytes, *after* compression. There is no default for this.
  // This can be used of the TSDB has a strict maximum request size. Since it's impossible to know
  // the size before compression, batch_max_samples should be tuned alongside this. If the limit is
  // hit, the batch will be split in half into 2 requests so this is an expensive operation.
  optional uint64 batch_max_size = 13;

  // Whether to send metadata (name and tags) only. If true, samples are dropped.
  bool metadata_only = 6;

  // What auth to use. If not specified, no auth is used.
  HttpRemoteWriteAuthConfig auth = 7;

  // Optional additional request headers that are sent with the remote write request.
  repeated RequestHeader request_headers = 8;

  // Whether to attempt conversion to Prometheus name format:
  // https://prometheus.io/docs/concepts/data_model/#metric-names-and-labels.
  //
  // If false, the name will be passed through even if it is not compliant. Defaults to true.
  optional bool convert_metric_name = 9;

  // Retry policy. If not specified default values are used.
  common.v1.RetryPolicy retry_policy = 10;

  // Lyft specific configuration. To be generalized later.
  LyftSpecificConfig lyft_specific_config = 11;

  // Idle time for outbound connections in the connection pool. If not set, defaults to 90s.
  google.protobuf.Duration pool_idle_timeout = 12;
}
